{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "DOA Stack with ADOP Gen 5",
	
	 "Mappings": {
        "RegionMap": {
          "eu-central-1": {
            "AMI": "ami-9bf712f4"
          },
          "eu-west-1": {
            "AMI": "ami-7abd0209"
          },
          "us-east-1": {
            "AMI": "ami-6d1c2007"
          },
          "us-west-2": {
            "AMI": "ami-d2c924b2"
          },
          "us-west-1": {
            "AMI": "ami-af4333cf"
          },
          "ap-southeast-1":{
            "AMI": "ami-f068a193"
          },
          "ap-southeast-2": {
            "AMI": "ami-fedafc9d"
          },
          "ap-south-1": {
            "AMI": "ami-95cda6fa"
          }
        }
    },
 
    "Outputs": {
        "ReleaseNote": {
            "Description": "This is your starting point, please copy this URL into your web browser.",
            "Value": {
                "Fn::Join": [
                    "", [
                        "http://", {
                            "Fn::GetAtt": [
                                "DOAEc2Instance",
                                "PublicIp"
                            ]
                        },
                        "/"
                    ]
                ]
            }
        }
    },
    "Parameters": {
    
        "KeyName": {
            "Description": "Key-pair name to use. Note : Make sure you choose a key which you have.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "DOAEc2Instance": {
            "Properties": {
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "DeleteOnTermination": "true",
                        "VolumeSize": 50,
                        "VolumeType": "gp2"
                    }
                }],
				 "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "NetworkInterfaces": [{
                    "AssociatePublicIpAddress": "true",
                    "DeleteOnTermination": "true",
                    "DeviceIndex": "0",
                    "GroupSet": [{
                        "Ref": "DoaSecurityGroup"
                    }],
                    "SubnetId": {
                        "Ref": "PublicSubnet"
                    }
                }],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Ref": "AWS::StackName"
                          },
                          "ADOPInstance"
                        ]
                      ]
                    }
                  }
                ]
                
            },
            "Type": "AWS::EC2::Instance"
        },
        "DoaSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enabling access to all IPs and below listed ports",
                "SecurityGroupIngress": [{
                    "CidrIp": "0.0.0.0/0",
                    "FromPort": "22",
                    "IpProtocol": "tcp",
                    "ToPort": "22"
                }, {
                    "CidrIp": "0.0.0.0/0",
                    "FromPort": "80",
                    "IpProtocol": "tcp",
                    "ToPort": "80"
                }, {
                    "CidrIp": "0.0.0.0/0",
                    "FromPort": "443",
                    "IpProtocol": "tcp",
                    "ToPort": "443"
                }, {
                    "CidrIp": "0.0.0.0/0",
                    "FromPort": "25826",
                    "IpProtocol": "udp",
                    "ToPort": "25826"
                }],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "PublicRouteDefault": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "VpcInternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PublicRouteTable": {
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PublicSubnet": {
            "Properties": {
                "CidrBlock": "10.0.1.0/24",
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnetPublicRouteTableAssoc": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Vpc": {
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true"
            },
            "Type": "AWS::EC2::VPC"
        },
        "VpcGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "VpcInternetGateway"
                },
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "VpcInternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "DOAWaitConditionHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {}
        },
        "DOAWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "DOAEc2Instance",
            "Properties": {
                "Handle": {
                    "Ref": "DOAWaitConditionHandle"
                },
                "Timeout": "1800"
            }
        }
    }
}

